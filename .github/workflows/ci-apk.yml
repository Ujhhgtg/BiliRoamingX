name: CI Apk

on:
#  push:
#    branches:
#      - main
#    paths-ignore:
#      - '**.md'
#      - '.github/**'
#      - '!.github/workflows/*'
  workflow_dispatch:
  workflow_run:
    workflows: [ "CI" ]
    types:
      - completed

permissions:
  contents: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Download ReVanced Cli
        run: wget "https://github.com/zjns/revanced-cli/releases/download/v4.6.0.1/revanced-cli.jar"

      - name: Restore BiliBili original apk cache
        uses: actions/cache@v4
        id: cache-download
        with:
          path: ./downloads/bilibili.tar.gz
          key: bilibili

      - name: Download file if not cached
        if: steps.cache-download.outputs.cache-hit != 'true'
        run: |
          mkdir -p downloads
        # use old version 8.16.0 cuz new version has a lot of breaking changes
          wget "https://ucdl.25pp.com/fs08/2024/10/10/6/110_bd3b286f9053c9a1a2593b8205e1dc34.apk" -O downloads/bilibili.tar.gz

      - name: Unzip BiliBili original apk
        run: |
          tar -xzf ./downloads/bilibili.tar.gz -C ./bilibili.apk

#      - name: Download BiliBili
##        run: wget "https://dl.hdslb.com/mobile/latest/android64/iBiliPlayer-bili.apk" -O bilibili.apk
#        # use old version 8.16.0 cuz new version has a lot of breaking changes
#        run: wget "https://ucdl.25pp.com/fs08/2024/10/10/6/110_bd3b286f9053c9a1a2593b8205e1dc34.apk" -O bilibili.apk

      - name: Download patches
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          run_id=$(gh run list \
          --workflow ci.yml \
          --branch main \
          --json databaseId,conclusion \
          --jq '[.[] | select(.conclusion=="success")][0].databaseId')
          
          echo "Latest successful run id: $run_id"
          
          gh run download "$run_id" --name patches --dir .

      # 'gh run download' already unzips the artifact
#      - name: Unzip patches
#        run: unzip patches.zip -d patches

      - name: Rename patches
        run: mv patches/BiliRoamingX-integrations-*.apk integrations.apk && mv patches/BiliRoamingX-patches-*.jar patches.jar

      - name: Patch BiliBili
        run: java -jar revanced-cli.jar patch --merge integrations.apk --patch-bundle patches.jar --signing-levels 1,2,3 bilibili.apk

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: bilibili-patched.apk
          path: './bilibili-patched.apk'

      - name: Set up Git
        run: |
          git fetch --tags
          TAG_NAME="v$(date +'%Y.%m.%d-%H%M')"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV

      - name: Create Git tag
        run: |
          git tag -f $TAG_NAME
          git push -f origin $TAG_NAME

      - name: Create or Update Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ env.TAG_NAME }}
        run: |
          # Try to delete existing release if it exists
          gh release delete "$TAG_NAME" -y || true
          # Create a new release with the tag
          gh release create "$TAG_NAME" \
            --title "GitHub Actions $TAG_NAME" \
            --notes "$TAG_NAME" \
            ./bilibili-patched.apk
